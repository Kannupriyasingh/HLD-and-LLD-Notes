------------LLD------------

Step 1: Object Oriented Programming
	Encapsulation
	Abstraction
	Inheritance
	Polymorphism
	SOLID principles

Step 2: Design Patterns
	Critical (Singleton, Factory etc.)
	Structural (Proxy, Bridge etc.)
	Behavioral (Strategy, Command, Observer etc.)

Step 3: Concurrency and Thread Safety
	Thread Safe Injection
	Locking Mechanism
	Producer-Consumer
	Race condition and Synchronization


Step 4: UML Diagrams

Step 5: APIs
	API Design
	req/res Object Modeling
	versionsing and extensibility
	Clean Code Principle: DRY, SRP etc.
	Avoiding God Classes

Step 6: Common LLD Problems
		Design a tic tac toe or chess game
		Design a splitwise app
		Design a Parking lot
		Design a Elevator System with multiple lifts
		Design a notification System
		Design a Food Delivery App
		Design a Movie Ticket Booking System
		Design a URL shortner
		Design a Logging Framework
		Design a Rate Limiter

